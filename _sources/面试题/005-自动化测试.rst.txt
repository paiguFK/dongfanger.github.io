自动化测试 22题
===============

|image1|

**自动化测试有哪些评估指标？**

::

   测试用例数
   执行频率
   运行成功率

**如何提高selenium脚本的执行速度？**

::

   减少操作步骤。
   中断页面加载。
   等待时间设置合理。
   多线程。
   代码层面：
       使用生成器节约内存
       循环代码优化
       核心模块用Cython  PyPy
       多进程、多线程、协程
       多个if elif条件判断，可以把最有可能先发生的条件放到前面写，这样可以减少程序判断的次数，提高效率

**你觉得自动化测试最大的缺陷是什么？**

::

   维护成本高。

**PageFactory设计模式？**

::

   PageFactory与PageObject思想大体差不多，只是表现形式不太一样，是通过注解方式来定位元素对象。主要技术点是@FindBy注解。

**规划自动化阶段时涉及的要点是什么？**

::

   分析自动化范围，哪些做，哪些不做
   选择合适的自动化工具/框架
   确定测试可交付成果

**XPath中使用单斜杠和双斜杠有什么区别？**

::

   // 表示的是从根节点搜索。
   / 表示的是从当前节点搜索。

**什么是think time？它的作用是什么？**

::

   think time是指用户在进行操作时，每个请求之间的间隔时间。
   作用是在脚本中加入think time，更加真实的模拟用户操作。

**selenium中hidden或display＝none的元素是否可以定位到？**

::

   不能。

**selenium中如何保证操作元素的成功率？也就是说如何保证我点击的元素一定是可以点击的？**

::

   显示等待，driver.implicitly_wait(30)。
   用多种不同的方式定位，1种失败自动尝试第2种。

**如何去定位页面上动态加载的元素？**

::

   触发动态加载元素的事件，直至动态元素出现，进行定位。

**如何去定位属性动态变化的元素？**

::

   xpath或者css通过同级、父级、子级进行定位。

**点击链接以后，selenium是否会自动等待该页面加载完毕？**

::

   会的。

**如何在定位元素后高亮元素（以调试为目的）？**

::

   重置元素属性，给定位的元素加背景、边框。

**webdriver页面跳转？**

::

   get打开url或click页面链接。

**在selenium中如何处理多个弹出窗口？**

::

   getWindowHandles();
   driver.switchTo().window(ArrayIndex);

**如何处理Selenium WebDriver中的警报/弹出窗口？**

::

   dismiss()  点击“Cancel”按钮
   accept()  点击“Ok”按钮
   getText()  返回警告框中显示的文本
   sendKeys()  输入到警告框中

**WebDriver定位元素方式有哪些？**

::

   ID, Name, CSS, XPath, ClassName, TagName, LinkText, PartialLinkText

**什么是分层自动化？**

::

   金字塔结构：
   UI自动化
   接口自动化
   单元测试

**用例失败截图？**

::

   WebDriver有提供用于截图的TakesScreenshot类。

如何在脚本中执行 JavaScript 代码？

::

   # python
   driver.execute_script()

   // java
   JavascriptExecutor jse=(JavascriptExecutor)driver;
   jse.executeScript(js);

**Appium的原理？**

::

   API接口调用Selenium的接口，Appium Server接收WebDriver标准请求，解析请求内容，调用对应的框架相应操作。
   代码将DesiredCapability中的键值对组合成一个JSON，然后通过HTTP协议发送到Appium服务器创建一个session。代码与Appium的所有交互都是围绕着这个session进行的。
   session创建成功后，Appium再通过USB接口与手机之间创建TCP连接，先安装一些服务端App，比如Android API 4.2+是uiautomator，Android 2.3+是Instrumentation，iOS则是UiAutomation。
   手机的操作都是有Appium发送指令到uiautomator，然后再由uiautomator进行控制的。

**Selenium/WebDriver工作原理？**

::

   1.selenium client(python等语言编写的自动化测试脚本)初始化一个service服务，通过Webdriver启动浏览器驱动程序chromedriver.exe
   2.通过RemoteWebDriver向浏览器驱动程序发送HTTP请求，浏览器驱动程序解析请求，打开浏览器，并获得sessionid，如果再次对浏览器操作需携带此id
   3.打开浏览器，绑定特定的端口，把启动后的浏览器作为webdriver的remote server
   4.打开浏览器后，所有的selenium的操作(访问地址，查找元素等)均通过RemoteConnection链接到remote server，然后使用execute方法调用_request方法通过urlib3向remote server发送请求
   5.浏览器通过请求的内容执行对应动作
   6.浏览器再把执行的动作结果通过浏览器驱动程序返回给测试脚本

**全新项目交给你，如何展开你的自动化测试工作？**

::

   分析业务特点。
   选择合适的工具或平台。
   确认自动化测试范围。
   编写自动化用例。
   定时执行，输出测试报告。
   接入CI/CD流程。
   冒烟/回归。

.. |image1| image:: ../wanggang.png
