3 算法
======

|image1|

**LeetCode刷题记录：https://github.com/dongfanger/leetcode-python。**

**给定数组[5, 3, 2, 6, 1, 4]，请实现冒泡排序，从小到大。**

.. code:: python

   a = [5, 3, 2, 6, 1, 4]

   n = len(a)
   for i in range(n - 1):
       for j in range(n - 1 - i):
           if a[j] > a[j + 1]:
               a[j], a[j + 1] = a[j + 1], a[j]

**string = “192.0.0.1?!289.0.0.1!0.0.0.0!192.163.10.28?192.0.0.1”**
**要求：返回一个IP数组，并且按IP最后一位排序返回。**
**P.S.语言随意，只需要能够正确排序返回接口。（Java、Python、Shell均可）**

.. code:: python

   import re

   s = "192.0.0.1?!289.0.0.1!0.0.0.0!192.163.10.20?192.0.0.1"
   ips = re.split(r"\?!|!|\?", s)


   def lastOne(i):
    return i.split('.')[-1]


   ips.sort(key=lastOne)
   print(ips)

**全排列，是把一堆字符按照一定的顺序排列起来，所有可能的组合。**
**比如，“123”的全排列为“123”、“132”、“213”、“231”、“312”、“321”。**
**请用Python实现全排列。**

.. code:: python

   test_list = ['x', 'y', 'z']


   def permutations(sequence, i):
    if i == (len(sequence) - 1):
        print(str(sequence))
    else:
        for j in range(i, len(sequence)):
            sequence[i], sequence[j] = sequence[j], sequence[i]
            permutations(sequence, i + 1)
            sequence[i], sequence[j] = sequence[j], sequence[i]


   permutations(test_list, 0)

.. |image1| image:: ../wanggang.png
