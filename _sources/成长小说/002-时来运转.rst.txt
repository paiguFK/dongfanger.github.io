2 时来运转
==========

|image1|

因为他的名声，还不是真正的名声！

只是相对于应届生的标准。

挑战还没有到来。

周末的天气很好。

飞来峰下，西水湖前。

他静静站着。

内心很快乐。

他希望未来的路，能一直像这么样走，走远一点，越远越好。

他忽然发现何必患得患失，至少头开的还不错。

他也不再去想。

第二天。

一大早。

开发找到了他，笑了笑。

开发很少笑，笑容生涩而怪异。

开发道：“你昨天提的这个bug是什么意思？”

他道：“哦？”

开发道：“你这提的只有问题，我都不知道该怎么重现。”

他道：“哦。”

开发道：“你要把重现步骤写上，我才可以根据步骤来重现。”

他没有直接回答。

开发道：“还有你贴的这个日志，对我排查问题一点用都没有。”

他红了脸。手握紧。瞳孔在收缩。

他道：“好。”

开发冷冷的接着道：“你可以去看看他们是怎么提bug的。”

他笑了笑，笑容中带着种说不出的讥诮之意。

开发道：“？？？”

他道：“不是，我笑得是我自己。”

开发道：“哦？”

他道：“没事。”

他拱拱手，一句话都不再说，掉头就走。

他走下了楼，长舒了一口气。

他已背熟bug的属性和流转状态。

bug属性包括编号、提交日期、测试人员、指派给、标题、问题描述、功能模块、严重程度、优先级。

bug流转状态包括新建、打开、修复中、验证中、测试不通过、已关闭。

他忽然发现，理论终究不是实践。

他一定要把bug写好。

他看着其他人提的bug，看了很久。

环境、用户、数据。

前提条件、重现步骤。

实际结果、预期结果。

有截图，图上也有标红的备注。

一个bug不会包括十几个小bug。

一个bug也不只简单的最小bug。

拆分的合理且精确。

不一定那么标准。

但这些要素一个都没有少。

他提交bug前，反复检查了3遍。

确保自己能看懂，别人能看懂。

一周后。

一大早。

开发找到了他。大笑。

笑得甜又媚。

他道：“怎么了？”

开发嫣然道：“我今天不用加班了。”

他道：“为啥？”

开发道：“因为你提的bug很好，我很快就定位改了。”

他道：“那我也不用加班了？”

开发道：“当然。”

世上虽然有不少好人好事，像这样的好事倒还不多。

开发道：“这是你的运气？还是我的？”

他道：“当然是我的。”

开发道：“为什么？”

他道：“据说一个人bug写的最烂的时候，总是会转运的。”

这是第一天。

第二天也一样。

他们这一周都没有加班。

阳光昭射在窗台上，他正准备下班。

领导走了过来。

.. |image1| image:: ../wanggang.png
